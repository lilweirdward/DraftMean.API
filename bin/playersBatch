#!/usr/bin/env node

require('dotenv').config();
const MongoClient = require('mongodb').MongoClient,
    Server = require('mongodb').Server,
    ObjectId = require('mongodb').ObjectID,
    fs = require('fs'),
    csv = require('fast-csv');

// TODO: Update file path to S3
var csv_url = process.env.CSV_URL;

var url = 'mongodb://127.0.0.1:27017/draftmean';
MongoClient.connect(url, function(err, client) {
    if (err) throw err;
    const db = client.db('draftmean');
    var boardCollection = db.collection('boards');
    var playersCollection = db.collection('players');

    boardCollection.find({}).toArray(function(err, boards) {
        if (err || boards.length == 0) {
            console.log('Could not find any board(s) for query: ' 
                // + '{ _id: ObjectId.createFromHexString(\'5A976158B1BADE3D4E2664B7\') }'
                + '{}'
                + (null == err ? '' : '\nError: ' + err));
            client.close();
        }
        var end = boards.length - 1;

        boards.forEach((board, i) => {
            console.log(i);
            var idHex = board._id.toHexString();
            var boardId = Buffer.from(idHex, 'hex').toString('base64');

            playersCollection.find({ BoardId: boardId }).toArray(function(err, players) {
                if (err) {
                    console.log('board ' + boardId + ' had an err: ' + err.message);
                    if (i == end) client.close();
                } else {
                    if (players.length == 0) {
                        console.log('board ' + boardId + ' has no players');
                        // TODO: Remove these empty boards since they're not valid or usable
                        if (i == end) client.close();
                    } else {
                        var stream = fs.createReadStream(csv_url);
                        csv.fromStream(stream, { headers: true })
                            .on("data", (data) => {
                                var player = players.find(p => p.PlayerName == data.Overall);
                                if (null == player) {
                                    console.log(data.Overall + ' does not exist in BoardId ' + boardId);
                                    // TODO: Add player to list for current board
                                } else {
                                    console.log('Current Player in BoardId ' + player.BoardId + ': ' + player.PlayerName);
                                    // TODO: Update player
                                }
                            })
                            .on("end", () => {
                                console.log('done');
                                if (i == end) {
                                    console.log('closing client');
                                    client.close();
                                }
                            });
                    }
                }
            });
        });
    });
});